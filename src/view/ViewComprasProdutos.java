/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerCompras;
import controller.ControllerComprasProdutos;
import controller.ControllerFornecedor;
import controller.ControllerProdutos;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelCompras;
import model.ModelComprasProdutos;
import model.ModelFornecedor;
import model.ModelProdutos;
import util.BLDatas;
import util.BLMascaras;

/**
 *
 * @author blsoft
 */
public class ViewComprasProdutos extends javax.swing.JFrame {

    ModelProdutos modelProdutos = new ModelProdutos();
    ControllerProdutos controllerProdutos = new ControllerProdutos();
    ArrayList<ModelProdutos> listaModelProdutos = new ArrayList<>();
    ArrayList<ModelFornecedor> listaFornecedor = new ArrayList<ModelFornecedor>();
    ControllerFornecedor controllerFornecedor = new ControllerFornecedor();
    BLMascaras bLMascaras = new BLMascaras();
    ControllerCompras controllerCompras = new ControllerCompras();
    ModelCompras modelCompras = new ModelCompras();
    ControllerComprasProdutos controllerComprasProdutos = new ControllerComprasProdutos();
    ModelComprasProdutos modelComprasProdutos = new ModelComprasProdutos();
    ArrayList<ModelComprasProdutos> listaModelComprasProdutoses = new ArrayList<>();
    ArrayList<ModelCompras> listaModelComprases = new ArrayList<>();

    /**
     * Creates new form ViewComprasProdutos
     */
    public ViewComprasProdutos() {
        initComponents();
        listarCodigoProdutos();
        listarProdutos();
        setLocationRelativeTo(null);
        carregarCompras();
        
          URL caminhoIcone = getClass().getResource("/imagens/pay.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminhoIcone);
        this.setIconImage(iconeTitulo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        cbCodProduto = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cbProdutos = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfValorTotal = new javax.swing.JTextField();
        tfValorCusto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfValorVenda = new javax.swing.JTextField();
        tfEstoque = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbProdutos = new javax.swing.JTable();
        btCancelar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        tfValorTotalCompra = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btAdicionar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbCompras = new javax.swing.JTable();
        btCancelar1 = new javax.swing.JButton();
        btExcluir1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Compras");

        cbCodProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbCodProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel1.setText("Cod. Prod.");

        cbProdutos.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cbProdutosPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel2.setText("Descrição do Produtos");

        jLabel5.setText("Add. Estoque:");

        jLabel6.setText("Valor total custo:");

        tfValorTotal.setEditable(false);

        tfValorCusto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfValorCustoFocusLost(evt);
            }
        });

        jLabel3.setText("Valor custo:");

        jLabel4.setText("Valor venda:");

        tfEstoque.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfEstoqueFocusLost(evt);
            }
        });

        tbProdutos.setAutoCreateRowSorter(true);
        tbProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descrição", "Custo", "Venda", "Quantidade", "Total C."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProdutos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbProdutos.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbProdutos);
        if (tbProdutos.getColumnModel().getColumnCount() > 0) {
            tbProdutos.getColumnModel().getColumn(1).setMinWidth(200);
            tbProdutos.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/No.png"))); // NOI18N
        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        btExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Delete.png"))); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Add.png"))); // NOI18N
        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Save.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setEnabled(false);
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jLabel7.setText("Valor total C.");

        btAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Down.png"))); // NOI18N
        btAdicionar.setText("Add");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(cbProdutos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btCancelar)
                        .addGap(1, 1, 1)
                        .addComponent(btExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSalvar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfValorTotalCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(tfValorCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(tfValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(tfEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(tfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(btAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btAdicionar)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfValorCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfValorTotalCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btCancelar)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btExcluir)
                        .addComponent(btNovo))
                    .addComponent(jbSalvar))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Cadastro", jPanel1);

        tbCompras.setAutoCreateRowSorter(true);
        tbCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Descrição", "Custo", "Venda", "Quantidade", "Total C."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbCompras.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tbCompras.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tbCompras);
        if (tbCompras.getColumnModel().getColumnCount() > 0) {
            tbCompras.getColumnModel().getColumn(1).setMinWidth(200);
            tbCompras.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        btCancelar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/No.png"))); // NOI18N
        btCancelar1.setText("Cancelar");
        btCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelar1ActionPerformed(evt);
            }
        });

        btExcluir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/18x18/Delete.png"))); // NOI18N
        btExcluir1.setText("Excluir");
        btExcluir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluir1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btCancelar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btExcluir1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar1)
                    .addComponent(btExcluir1))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Consulta", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbCodProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbCodProdutoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (this.cbCodProduto.isPopupVisible()) {
            modelProdutos = controllerProdutos.getProdutosController(Integer.parseInt(cbCodProduto.getSelectedItem().toString()));
            //recupera o código
            this.cbProdutos.setSelectedItem(String.valueOf(modelProdutos.getNome()));
            this.tfValorVenda.setText(String.valueOf(modelProdutos.getValor()));
            this.tfValorCusto.setText(String.valueOf(modelProdutos.getValorCusto()));
            this.tfEstoque.setText("0");
            this.tfValorTotal.setText(String.valueOf(Double.parseDouble(tfValorCusto.getText())
                    * Double.parseDouble(tfEstoque.getText())));
        }
    }//GEN-LAST:event_cbCodProdutoPopupMenuWillBecomeInvisible

    private void cbProdutosPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbProdutosPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (this.cbProdutos.isPopupVisible()) {
            modelProdutos = controllerProdutos.getProdutosController(cbProdutos.getSelectedItem().toString());
            //recupera o código
            this.cbCodProduto.setSelectedItem(modelProdutos.getCodigo());
            this.tfValorVenda.setText(String.valueOf(modelProdutos.getValor()));
            this.tfValorCusto.setText(String.valueOf(modelProdutos.getValorCusto()));
            this.tfEstoque.setText("0");
            this.tfValorTotal.setText(String.valueOf(Double.parseDouble(tfValorCusto.getText())
                    * Double.parseDouble(tfEstoque.getText())));
        }
    }//GEN-LAST:event_cbProdutosPopupMenuWillBecomeInvisible

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        limparDados();
        jbSalvar.setEnabled(true);
    }//GEN-LAST:event_btNovoActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        // para excluir a linha
        int linhaSelecionada = tbProdutos.getSelectedRow();
        // Verificamos se existe realmente alguma linha selecionada
        if (linhaSelecionada < 0) {
            JOptionPane.showMessageDialog(this, "Você deve selecionar um item na tabela antes de clicar no botão!", "ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        } else {
            // Obtem o modelo da JTable
            DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
            // Remove a linha
            modelo.removeRow(linhaSelecionada);
            this.tfValorTotal.setText(String.valueOf(this.somaEAtualizaValorTotal()));
        }
        //somar e atualizar valor total
        this.tfValorTotalCompra.setText(String.valueOf(this.somaEAtualizaValorTotal()));
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        this.limparDados();
        this.jbSalvar.setEnabled(false);
    }//GEN-LAST:event_btCancelarActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        if (tbProdutos.getRowCount() < 1) {
            JOptionPane.showMessageDialog(this, "Você deve preencher inserir dados na tabela para salvar!", "ATENÇÂO", JOptionPane.WARNING_MESSAGE);
        } else {
            modelCompras = new ModelCompras();
            listaModelComprasProdutoses = new ArrayList<>();

            modelCompras.setValorTotal(Double.parseDouble(tfValorTotalCompra.getText()));

            for (int i = 0; i < tbProdutos.getRowCount(); i++) {
                modelComprasProdutos = new ModelComprasProdutos();
                modelComprasProdutos.setCodProduto(Integer.parseInt(tbProdutos.getValueAt(i, 0).toString()));
                modelComprasProdutos.setValorCusto(Double.parseDouble(tbProdutos.getValueAt(i, 2).toString()));
                modelComprasProdutos.setValorVenda(Double.parseDouble(tbProdutos.getValueAt(i, 3).toString()));
                modelComprasProdutos.setQuantidade(Integer.parseInt(tbProdutos.getValueAt(i, 4).toString()));
                listaModelComprasProdutoses.add(modelComprasProdutos);
            }
            modelComprasProdutos.setListaModelComprasProdutos(listaModelComprasProdutoses);

            //salvar venda
            int codigoCompra = controllerCompras.salvarComprasController(modelCompras);
            if (codigoCompra > 0) {
                modelComprasProdutos.setCodCompras(codigoCompra);
                //salvar lista de produtos
                controllerComprasProdutos.salvarcompras_produtosController(modelComprasProdutos);
                //adicionar produtos ao estoque
                addEstoque(listaModelComprasProdutoses);
                JOptionPane.showMessageDialog(this, "Registro gravado com sucesso!");
                //limpar dados e preparar tela
                limparDados();
                jbSalvar.setEnabled(false);
                this.carregarCompras();
                //avançar para aba 2
                jTabbedPane1.setSelectedIndex(jTabbedPane1.getSelectedIndex() + 1);
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao gravar os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void btCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btCancelar1ActionPerformed

    private void btExcluir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluir1ActionPerformed
        int linha = tbCompras.getSelectedRow();
        int codigo = (int) tbCompras.getValueAt(linha, 0);
        listaModelComprasProdutoses = new ArrayList<>();

        //pegunta se realmente deseja excluir
        int opcao = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja"
                + " excluir o registro:\n" + "\n " + 0 + "?", "Atenção", JOptionPane.YES_NO_OPTION);
        //se sim exclui, se não não faz nada    
        if (opcao == JOptionPane.OK_OPTION) {
            if (controllerCompras.excluirComprasController(codigo)) {
                listaModelComprasProdutoses = controllerComprasProdutos.getListacompras_produtosController(codigo);
                if (controllerComprasProdutos.excluircompras_produtosController(codigo)) {
                    JOptionPane.showMessageDialog(this, "Registro excluido com suscesso!");
                    removeEstoque(listaModelComprasProdutoses);
                    //remover produtos do estoque
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao excluir os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
                }
                carregarCompras();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir os dados!", "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btExcluir1ActionPerformed

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed

        float valorCusto, valorVenda;
        valorCusto = Float.parseFloat(this.tfValorCusto.getText());
        valorVenda = Float.parseFloat(this.tfValorVenda.getText());

        if (tfValorCusto.getText().equals("") || tfValorVenda.getText().equals("") || tfEstoque.getText().equals("") || valorCusto > valorVenda) {
            JOptionPane.showMessageDialog(rootPane, "Você deve preencher todos os campos! \n"
                    + "Valor de custo não pode ser maior que o valor de venda!");
        } else {
            //Adiciona linhas na tabela
            DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
            int cont = 0;
            for (int i = 0; i < cont; i++) {
                modelo.setNumRows(0);
            }

            //pega a quantidade de linhas e joga na variavel
            modelo.addRow(new Object[]{
                cbCodProduto.getSelectedItem().toString(),
                this.cbProdutos.getSelectedItem().toString(),
                this.tfValorCusto.getText(),
                this.tfValorVenda.getText(),
                this.tfEstoque.getText(),
                this.tfValorTotal.getText()
            });
        }
        //somar e atualizar valor total
        this.tfValorTotalCompra.setText(String.valueOf(this.somaEAtualizaValorTotal()));
    }//GEN-LAST:event_btAdicionarActionPerformed

    private void tfValorCustoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfValorCustoFocusLost
        // TODO add your handling code here:
        tfValorTotal.setText(calcularValorproduto(this.tfValorCusto.getText(), this.tfEstoque.getText()));
    }//GEN-LAST:event_tfValorCustoFocusLost

    private void tfEstoqueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfEstoqueFocusLost
        // TODO add your handling code here:
        tfValorTotal.setText(calcularValorproduto(this.tfValorCusto.getText(), this.tfEstoque.getText()));
    }//GEN-LAST:event_tfEstoqueFocusLost

    /**
     * add os produtos para o estoque
     *
     * @param pCodigoProduto
     */
    private void addEstoque(ArrayList<ModelComprasProdutos> pListaComprasProdutos) {
        float quantidade;
        listaModelProdutos = new ArrayList<>();

        int cont = pListaComprasProdutos.size();
        for (int i = 0; i < cont; i++) {
            modelProdutos = new ModelProdutos();
            modelProdutos.setCodigo(pListaComprasProdutos.get(i).getCodProduto());
            quantidade = controllerProdutos.getProdutosController(modelProdutos.getCodigo()).getEstoque() + pListaComprasProdutos.get(i).getQuantidade();
            modelProdutos.setEstoque(quantidade);
            modelProdutos.setValorCusto(pListaComprasProdutos.get(i).getValorCusto());
            modelProdutos.setValor(pListaComprasProdutos.get(i).getValorVenda());
            listaModelProdutos.add(modelProdutos);
        }
        modelProdutos.setListaModelProdutoses(listaModelProdutos);
        controllerProdutos.atualizarProdutosQuantidadeValorController(modelProdutos);
    }

    /**
     * remove os produtos do estoque
     *
     * @param pCodigoProduto
     */
    private void removeEstoque(ArrayList<ModelComprasProdutos> pListaComprasProdutos) {
        float quantidade;
        listaModelProdutos = new ArrayList<>();
        System.err.println(pListaComprasProdutos.size());
        int cont = pListaComprasProdutos.size();
        for (int i = 0; i < cont; i++) {
            modelProdutos = new ModelProdutos();
            System.err.println("passei aqui" + pListaComprasProdutos.get(i).getCodProduto());
            modelProdutos.setCodigo(pListaComprasProdutos.get(i).getCodProduto());
            quantidade = controllerProdutos.getProdutosController(modelProdutos.getCodigo()).getEstoque() - pListaComprasProdutos.get(i).getQuantidade();
            modelProdutos.setEstoque(quantidade);
            modelProdutos.setValorCusto(pListaComprasProdutos.get(i).getValorCusto());
            modelProdutos.setValor(pListaComprasProdutos.get(i).getValorVenda());
            listaModelProdutos.add(modelProdutos);
        }
        modelProdutos.setListaModelProdutoses(listaModelProdutos);
        controllerProdutos.atualizarProdutosQuantidadeValorController(modelProdutos);
    }

    private void limparDados() {
        DefaultTableModel modelo = (DefaultTableModel) tbProdutos.getModel();
        modelo.setNumRows(0);
        tfValorTotalCompra.setText("0");
    }

    private void carregarCompras() {
        listaModelComprases = controllerCompras.getListaComprasController();
        DefaultTableModel modelo = (DefaultTableModel) tbCompras.getModel();
        modelo.setNumRows(0);
        //CARREGA OS DADOS DA LISTA NA TABELA
        int cont = listaModelComprases.size();
        for (int i = 0; i < cont; i++) {
            modelo.addRow(new Object[]{
                listaModelComprases.get(i).getCodigo(),
                listaModelComprases.get(i).getValorTotal()
            });
        }
    }

    // calcula o valor total do produto com quantidade
    private String calcularValorproduto(String pValorUnitario, String pQuantidade) {
        Double valorTotal, valorUnitario = null, quantidade = null;
        try {
            valorUnitario = Double.parseDouble(pValorUnitario);
            quantidade = Double.parseDouble(pQuantidade);
        } catch (NumberFormatException e) {
            System.err.println(e + "Erro");
        }
        valorTotal = valorUnitario * quantidade;
        return bLMascaras.arredondamentoDoubleComPontoDuasCasasString(valorTotal);
    }

    /**
     * Soma e atualiza os valores total
     *
     * @return
     */
    private float somaEAtualizaValorTotal() {
        float soma = 0;
        float valor = 0;
        int cont = tbProdutos.getRowCount();
        for (int i = 0; i < cont; i++) {
            valor = Float.parseFloat(String.valueOf(tbProdutos.getValueAt(i, 5)));
            soma = valor + soma;
        }
        return bLMascaras.arredondamentoComPontoDuasCasas(soma);
    }

    private void listarProdutos() {
        listaModelProdutos = controllerProdutos.getListaProdutosController();
        cbProdutos.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            cbProdutos.addItem(listaModelProdutos.get(i).getNome());
        }
    }

    private void listarCodigoProdutos() {
        listaModelProdutos = controllerProdutos.getListaProdutosController();
        cbCodProduto.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            cbCodProduto.addItem(listaModelProdutos.get(i).getCodigo());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewComprasProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewComprasProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewComprasProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewComprasProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewComprasProdutos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btCancelar1;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btExcluir1;
    private javax.swing.JButton btNovo;
    private javax.swing.JComboBox cbCodProduto;
    private javax.swing.JComboBox cbProdutos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JTable tbCompras;
    private javax.swing.JTable tbProdutos;
    private javax.swing.JTextField tfEstoque;
    private javax.swing.JTextField tfValorCusto;
    private javax.swing.JTextField tfValorTotal;
    private javax.swing.JTextField tfValorTotalCompra;
    private javax.swing.JTextField tfValorVenda;
    // End of variables declaration//GEN-END:variables
}
